<?xml version="1.0" encoding="UTF-8" ?>

<project name="OPI_Lab3" default="build">
    <property file="build.properties"/>
    <property environment="env"/>

    <!-- Путь к библиотекам -->
    <path id="classpath">
        <fileset dir="${user.home}/.m2/repository/" includes="**/*.jar"/>
    </path>

    <!-- Цель компиляции -->
    <target name="compile" depends="clean" description="(*) compile the source">
        <mkdir dir="${classes.dir}"/>
        <javac target="${java.ver}" source="${java.ver}" srcdir="${src.dir}" destdir="${classes.dir}" encoding="UTF-8">
            <classpath refid="classpath" />
        </javac>
    </target>

    <!-- Цель сборки JAR -->
    <target name="build" depends="compile" description="(*) build jar file">
        <jar destfile="${build.dir}/${ant.project.name}.jar" basedir="${classes.dir}" excludes="*Test.class">
            <fileset dir="${main.dir}/resources"/>
            <fileset dir="${main.dir}/webapp"/>
            <manifest>
                <attribute name="Version" value="${project.ver}"/>
                <attribute name="ru.timur.Main-Class" value="${main.class}"/>
            </manifest>
        </jar>
    </target>

    <!-- Цель тестирования -->
    <target name="test" depends="compile" description="(*) run tests">
        <junit printsummary="on">
            <classpath>
                <path refid="classpath"/>
                <pathelement location="${classes.dir}"/>
            </classpath>
            <test name="${test.class}"/>
            <formatter type="plain" usefile="false"/>
        </junit>
    </target>

    <!-- Цель генерации документации и добавления MD5/SHA-1 в MANIFEST.MF -->
    <target name="doc" depends="build" description="(*) generate Javadoc, add MD5 and SHA-1 to MANIFEST">
        <mkdir dir="${build.dir}/javadoc"/>
        <checksum property="hash.md5" algorithm="MD5" file="${build.dir}/OPI_Lab3.jar"/>
        <checksum property="hash.sha1" algorithm="SHA-1" file="${build.dir}/OPI_Lab3.jar"/>
        <javadoc destdir="${build.dir}/javadoc" sourcepath="${main.dir}" classpathref="classpath" useexternalfile="true">
            <fileset dir="${main.dir}/java" includes="**/*.java"/>
        </javadoc>
        <manifest file="${build.dir}/META-INF/MANIFEST.MF" mode="update">
            <section name="documentation">
                <attribute name="Project-MD5" value="${hash.md5}"/>
                <attribute name="Project-SHA-1" value="${hash.sha1}"/>
            </section>
        </manifest>
    </target>

    <!-- Цель team для получения предыдущих 4 ревизий, их сборки и упаковки -->
    <target name="team">
        <exec executable="git">
            <arg value="stash"/>
            <arg value="push"/>
            <arg value="--"/>
            <arg value="src/main/java"/>
        </exec>

        <exec executable="git">
            <arg value="checkout"/>
            <arg value="HEAD~1"/>
            <arg value="--"/>
            <arg value="src/main/java"/>
        </exec>
        <antcall target="build">
            <param name="file.jar" value="${build.dir}/${ant.project.name}-HEAD~1.jar"/>
        </antcall>

        <exec executable="git">
            <arg value="checkout"/>
            <arg value="HEAD~2"/>
            <arg value="--"/>
            <arg value="src/main/java"/>
        </exec>
        <antcall target="build">
            <param name="file.jar" value="${build.dir}/${ant.project.name}-HEAD~2.jar"/>
        </antcall>

        <exec executable="git">
            <arg value="checkout"/>
            <arg value="HEAD~3"/>
            <arg value="--"/>
            <arg value="src/main/java"/>
        </exec>
        <antcall target="build">
            <param name="file.jar" value="${build.dir}/${ant.project.name}-HEAD~3.jar"/>
        </antcall>

        <exec executable="git">
            <arg value="checkout"/>
            <arg value="HEAD~4"/>
            <arg value="--"/>
            <arg value="src/main/java"/>
        </exec>
        <antcall target="build">
            <param name="file.jar" value="${build.dir}/${ant.project.name}-HEAD~4.jar"/>
        </antcall>

        <exec executable="git">
            <arg value="checkout"/>
            <arg value="HEAD"/>
            <arg value="--"/>
            <arg value="src/main/java"/>
        </exec>

        <exec executable="git">
            <arg value="stash"/>
            <arg value="pop"/>
        </exec>

        <zip destfile="${build.dir}/revisions.zip">
            <fileset dir="${build.dir}" includes="${ant.project.name}-HEAD~1.jar, ${ant.project.name}-HEAD~2.jar, ${ant.project.name}-HEAD~3.jar, ${ant.project.name}-HEAD~4.jar"/>
        </zip>
    </target>


    <!-- Цель очистки -->
    <target name="clean">
        <delete dir="${build.dir}"/>
        <delete dir="${main.dir}/native2ascii"/>
    </target>
</project>
